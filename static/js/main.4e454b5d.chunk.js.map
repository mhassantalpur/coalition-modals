{"version":3,"sources":["Components/Modal.js","Components/ShowModalBtn.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","closeModal","className","onClick","ShowModalBtn","useState","showModal","setShowModal","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAwBeA,EApBD,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACd,OACE,qBAAKC,UAAU,UAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,wBAAQA,UAAU,gBAAgBC,QAAS,kBAAMF,GAAW,IAA5D,iBACA,qBAAKC,UAAU,QAAf,SACE,mDAEF,qBAAKA,UAAU,OAAf,SACE,0EAEF,sBAAKA,UAAU,SAAf,UACE,cAAC,EAAD,IACA,wBAAQA,UAAU,YAAYC,QAAS,kBAAMF,GAAW,IAAxD,kCCCKG,EAfM,WAAO,IAAD,EACSC,oBAAS,GADlB,mBAClBC,EADkB,KACPC,EADO,KAEzB,OACE,qCACE,wBACEL,UAAU,WACVC,QAAS,WAAOI,GAAa,IAF/B,0BAMCD,GAAa,cAAC,EAAD,CAAOL,WAAYM,QCDxBC,MAVf,WAEE,OACE,sBAAKN,UAAU,MAAf,UACE,oEACA,cAAC,EAAD,QCKSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.4e454b5d.chunk.js","sourcesContent":["import React from 'react'\nimport \"./Modal.css\";\nimport ShowModalBtn from './ShowModalBtn';\n\nconst Modal = ({closeModal}) => {\n  return (\n    <div className='modalBg'>\n      <div className='modalContainer'>\n        <button className='titleCloseBtn' onClick={() => closeModal(false)}> X </button>\n        <div className='title'>\n          <h1>This is a Modal</h1>\n        </div>\n        <div className='body'>\n          <p>having a transparent body is kinda cool</p>\n        </div>\n        <div className='footer'>\n          <ShowModalBtn />\n          <button className='cancelBtn' onClick={() => closeModal(false)}>Close modal</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import { useState } from \"react\";\nimport Modal from \"./Modal\";\n\nconst ShowModalBtn = () => {\n  const [showModal, setShowModal] = useState(false);\n  return (\n    <>\n      <button \n        className=\"modalBtn\"\n        onClick={() => {setShowModal(true)}}\n      >\n        Make a modal\n      </button>\n      {showModal && <Modal closeModal={setShowModal} />}\n    </>\n  )\n}\n\nexport default ShowModalBtn\n","import ShowModalBtn from \"./Components/ShowModalBtn\";\n\nfunction App() {\n  // const [showModal, setShowModal] = useState(false);\n  return (\n    <div className=\"App\">\n      <h1>Click the button to create a modal</h1>\n      <ShowModalBtn />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}